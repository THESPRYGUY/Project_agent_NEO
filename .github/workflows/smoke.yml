name: Smoke

on:
  push:
    branches: [ main, feature/**, chore/** ]
  pull_request:
    branches: [ main ]

jobs:
  smoke:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}/src
      NEO_REPO_OUTDIR: ${{ runner.temp }}/_generated
      NEO_COPY_TO_ONEDRIVE: 'false'
      FAIL_ON_PARITY: 'false'
      NEO_APPLY_OVERLAYS: 'false'
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install Node deps
        run: |
          npm i --no-fund --no-audit

      - name: Run smoke
        run: |
          python ci/smoke.py

      - name: Upload smoke artifacts
        uses: actions/upload-artifact@v4
        with:
          name: smoke-artifacts
          path: |
            _artifacts/smoke/repo.zip
            _artifacts/smoke/INTEGRITY_REPORT.json
            _artifacts/smoke/build.json

      - name: Verify smoke outputs
        run: |
          python - <<'PY'
          import json,sys
          p = '_artifacts/smoke/build.json'
          try:
              with open(p, 'r', encoding='utf-8') as f:
                  o = json.load(f)
          except Exception as exc:
              print(f'Failed to read {p}: {exc}')
              sys.exit(1)
          fc = int(o.get('file_count', -1))
          parity = o.get('parity', {}) or {}
          errs = o.get('integrity_errors', []) or []
          all_true = all(bool(parity.get(k)) for k in ('02_vs_14','11_vs_02','03_vs_02','17_vs_02'))
          print(f"SMOKE CHECK | files={fc} | parity_all={all_true} | integrity_errors={len(errs)}")
          if fc != 20 or not all_true or len(errs) > 0:
              sys.exit(1)
          PY
